---
- name: install unbound for Debian OS family
  ansible.builtin.apt:
    pkg: unbound
    state: "{{ unbound_pkg_state }}"
  when: ansible_os_family == 'Debian' and unbound_only_zones == false
  tags: ["packages","unbound"]

- name: install unbound for RedHat OS family
  ansible.builtin.yum:
    name: unbound
    state: "{{ unbound_pkg_state }}"
  when: (ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky')and unbound_only_zones == false
  tags: ["packages","unbound"]

- name: Ensure zones folder exist
  ansible.builtin.file:
    path: /etc/unbound/unbound.conf.d
    state: directory
    mode: 755
  notify: restart unbound
  tags: ["configuration","unbound"]

- name: Ensure log file exist
  ansible.builtin.file:
    path: "{{ unbound_logfile }}"
    state: touch
    mode: 0644
    owner: unbound
    modification_time: preserve
    access_time: preserve
  notify: restart unbound
  tags: ["configuration","unbound"]

- name: configure add independant config file
  ansible.builtin.template:
     src: "{{item}}.j2"
     dest: "/etc/unbound/unbound.conf.d/{{item}}"
  with_items:
     - 01general.conf
     - 98stub_zone.conf
     - 99forward_zone.conf
  notify: restart unbound
  when: unbound_only_zones == false
  tags: ["configuration","unbound"]

- name: configure unbound zones
  ansible.builtin.template:
     src: "10zone.conf.j2"
     dest: "/etc/unbound/unbound.conf.d/10{{item.name}}.conf"
  with_items: "{{unbound_zones}}"
  notify: restart unbound
  tags: ["configuration","unbound"]

- name: retreive unbound conf file list
  ansible.builtin.shell: /bin/ls /etc/unbound/unbound.conf.d/
  register: unbound_conf_list
  check_mode: no
  tags: ["configuration","unbound"]

- name: configure unbound.conf to include all configuration
  ansible.builtin.template:
     src: unbound.conf.j2
     dest: /etc/unbound/unbound.conf
  notify: restart unbound
  tags: ["configuration","unbound"]

- name: Run unbound-checkconf command
  ansible.builtin.shell: "/usr/sbin/unbound-checkconf"
  register: checkconf_output
  failed_when: "'errors in configuration file' in checkconf_output.stderr"
  
- name: Display command stdout if check succeed
  ansible.builtin.debug:
    msg: "Output: {{ checkconf_output.stdout }}"
  when: checkconf_output.rc == 0

- name: Display error message if check failed
  ansible.builtin.debug:
    msg: "Error: {{ checkconf_output.stderr }}"
  when: checkconf_output.rc != 0

- name: ensure unbound is started/stopped
  ansible.builtin.service:
     name: unbound
     state: "{{ unbound_service_state }}"
     enabled: "{{ unbound_service_enabled }}"
  tags: ["service","unbound"]
